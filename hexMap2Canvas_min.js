//=== hexMap2Canvas/hexMap2Canvas.js (Yuji SODE,2018): the MIT License; https://gist.github.com/YujiSODE/12abaa6eb5a199e24421673e7ccc3e0d ===
//Function that outputs 4-bit color map on a canvas element using given hexadecimal text map
function hexMap2Canvas(canvas,hexMap){var X=0,Y=0,W=0,H=0,length=0,map=hexMap.split(/\n/),mapH=map.length,mapW=map[0].length,i=1,j=0,toNum={},toHex={},block={};toNum={0:+0,1:+1,2:+2,3:+3,4:+4,5:+5,6:+6,7:+7,8:+8,9:+9,a:+10,b:+11,c:+12,d:+13,e:+14,f:+15};toHex={0:'0',1:'1',2:'2',3:'3',4:'4',5:'5',6:'6',7:'7',8:'8',9:'9',10:'a',11:'b',12:'c',13:'d',14:'e',15:'f'};block={0:[],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[],9:[],a:[],b:[],c:[],d:[],e:[],f:[],'\t':[],'\u0020':[]};while(i<mapH){width=map[i].length;mapW=mapW<width?width:mapW;i+=1;}W=Math.floor(canvas.width/mapW);H=Math.floor(canvas.height/mapH);if(W<1||H<1) {throw 'canvas size is too small';}var fills=function(hex,data){var ctx=canvas.getContext('2d'),i=0,L=data.length,v=[];ctx.fillStyle=["#0000ff","#0044ff","#0088ff","#00cbff","#00ffed","#00ffa9","#00ff65","#00ff21","#22ff00","#65ff00","#aaff00","#eeff00","#ffcc00","#ff8800","#ff4300","#ff0000"][toNum[hex]];ctx.beginPath();while(i<L){v=data[i].split(/,/);ctx.moveTo(v[0],v[1]);ctx.rect(v[0],v[1],v[2],v[3]);i+=1;}ctx.fill();ctx=null;};i=0;while(i<mapH){length=map[i].length;j=0;X=0;while(j<length){block[map[i][j]].push([X,Y,W,H].join());X+=W;Y+=(j<length-1)?0:H;j+=1;}i+=1;}i=0;while(i<16){fills(toHex[i],block[toHex[i]]);i+=1;}return canvas;}